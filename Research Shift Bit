https://vi.wikipedia.org/wiki/Ph%C3%A9p_to%C3%A1n_thao_t%C3%A1c_bit . 

Chỉ được dịch tối đa 5 bit cuối với kiểu int , còn long là 6 bit cuối .
*************************************************************************************
2). Không nên dịch bit quá lớn, vượt quá giới hạn cho phép.
Giả sử bạn dùng 16-bit với phép tính : $result = 35000 << 1;
kết quả tính ra thu được 70000 , nghĩ là thế nhưng thực tế là lỗi
vì giới hạn 16-bit max = 65536.

3). Dịch bit và Lũy Thừa cơ số 2 :  
so sánh 2 cái này phát :
$x = 99 >> 1;
$y = 99 /2;
Kết quả : $x = $y = 49 ; bằng nhau
làm phép tính khác ;
$x = 99 << 1;
$y = 99 * 2;
Kết quả : $x = $y = 198; bằng nhau

Tóm lại có được quy luật chuyển bit  
_Dịch sang trái n bit với n là số nguyên dương thì tương đương với nhân với 2 lũy thừa n
_Dịch sang phải n bit với n là số nguyên dương thì tương đương với chia với 2 lũy thừa n

reference by link :http://diendan.congdongcviet.com/threads/t3046::mot-so-bitwise-operators.cpp
************************************************************************************
nt x=-45;
int y=2;
x=x>>y;
System.out.println(x);

Trước tiên bạn phải đổi -45 sang nhị phân = 1101 0011 . Nếu bạn chưa biết cách đổi thì bạn vào Topic biểu diễn số âm bằng phương pháp bù 2 (xem link bên trên).

Dòng lệnh x=x>>y, tức là dịch chuyển x qua phải 2 bit (vì y=2). Sau khi dịch chuyển ta sẽ được kết quả như sau: 1111 0100

Để biết được số nhị phân 1111 0100 có giá trị là bao nhiêu khi chuyển sang hệ thập phân, các bạn làm như sau:

– Tiến hành đảo bit 1111 0100 thành => 0000 1011

– Sau đó cộng thêm 1 vào kết quả 0000 1011, ta được 0000 1100

– Như vậy kết quả sẽ được : 2^3+2^2 = 8+4=12, với dấu đằng trước là Âm, nên kết quả ta được -12

link : https://duythanhcse.wordpress.com/2012/01/01/cac-vi-d%E1%BB%A5-v%E1%BB%81-java-assignment-operator/

*****************************************************************************************************************************
Tức là khi dòng lệnh System.out.println(x); thực hiện thì ta sẽ được -12
